   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Ap_StrCmd_MOVE.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Ap_StrCmd_MOVE,"ax",%progbits
  19              		.align	2
  20              		.global	Ap_StrCmd_MOVE
  21              		.thumb
  22              		.thumb_func
  24              	Ap_StrCmd_MOVE:
  25              	.LFB0:
  26              		.file 1 "../LIB_AP/Ap_StrCmd_MOVE.c"
   1:../LIB_AP/Ap_StrCmd_MOVE.c **** //----------------------------------------------------------------------------
   2:../LIB_AP/Ap_StrCmd_MOVE.c **** //    프로그램명 	: StrCmd_MOVE 관련 함수
   3:../LIB_AP/Ap_StrCmd_MOVE.c **** //
   4:../LIB_AP/Ap_StrCmd_MOVE.c **** //    만든이     	: 
   5:../LIB_AP/Ap_StrCmd_MOVE.c **** //
   6:../LIB_AP/Ap_StrCmd_MOVE.c **** //    날  짜     	: 
   7:../LIB_AP/Ap_StrCmd_MOVE.c **** //    
   8:../LIB_AP/Ap_StrCmd_MOVE.c **** //    최종 수정  	: 
   9:../LIB_AP/Ap_StrCmd_MOVE.c **** //
  10:../LIB_AP/Ap_StrCmd_MOVE.c **** //    MPU_Type 		:
  11:../LIB_AP/Ap_StrCmd_MOVE.c **** //
  12:../LIB_AP/Ap_StrCmd_MOVE.c **** //    파일명     	: AP_StrCmd_MOVE.c
  13:../LIB_AP/Ap_StrCmd_MOVE.c **** //----------------------------------------------------------------------------
  14:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  15:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  16:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  17:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  18:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  19:../LIB_AP/Ap_StrCmd_MOVE.c **** //----- 헤더파일 열기
  20:../LIB_AP/Ap_StrCmd_MOVE.c **** //
  21:../LIB_AP/Ap_StrCmd_MOVE.c **** #define  AP_STRCMD_MOVE_LOCAL  
  22:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  23:../LIB_AP/Ap_StrCmd_MOVE.c **** #include "Ap_StrCmd.h"
  24:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  25:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  26:../LIB_AP/Ap_StrCmd_MOVE.c **** #include <stdio.h>
  27:../LIB_AP/Ap_StrCmd_MOVE.c **** //#include <ctype.h>
  28:../LIB_AP/Ap_StrCmd_MOVE.c **** #include <string.h>
  29:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  30:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  31:../LIB_AP/Ap_StrCmd_MOVE.c **** //-- 내부 선언
  32:../LIB_AP/Ap_StrCmd_MOVE.c **** //
  33:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  34:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  35:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  36:../LIB_AP/Ap_StrCmd_MOVE.c **** //-- 내부 변수
  37:../LIB_AP/Ap_StrCmd_MOVE.c **** //
  38:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  39:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  40:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  41:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  42:../LIB_AP/Ap_StrCmd_MOVE.c **** /*---------------------------------------------------------------------------
  43:../LIB_AP/Ap_StrCmd_MOVE.c ****      TITLE   : Ap_StrCmd_MOVE
  44:../LIB_AP/Ap_StrCmd_MOVE.c ****      WORK    : 
  45:../LIB_AP/Ap_StrCmd_MOVE.c ****      ARG     : void
  46:../LIB_AP/Ap_StrCmd_MOVE.c ****      RET     : void   
  47:../LIB_AP/Ap_StrCmd_MOVE.c **** ---------------------------------------------------------------------------*/
  48:../LIB_AP/Ap_StrCmd_MOVE.c **** void Ap_StrCmd_MOVE( u8 OpCode,  void *arg )
  49:../LIB_AP/Ap_StrCmd_MOVE.c **** {
  27              		.loc 1 49 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 512
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 ADF5007D 		sub	sp, sp, #512
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 528
  50:../LIB_AP/Ap_StrCmd_MOVE.c **** 	char CmdMain[10];
  51:../LIB_AP/Ap_StrCmd_MOVE.c **** 	char CmdSub[10];
  52:../LIB_AP/Ap_StrCmd_MOVE.c **** 	int  LeftSpeed;
  53:../LIB_AP/Ap_StrCmd_MOVE.c **** 	int  RightSpeed;
  54:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  55:../LIB_AP/Ap_StrCmd_MOVE.c **** 	int  Cnt = -1;
  56:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  57:../LIB_AP/Ap_StrCmd_MOVE.c **** 	u8	 ErrCode = ERR_NONE;
  58:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  59:../LIB_AP/Ap_StrCmd_MOVE.c **** 	char *argv[128];
  60:../LIB_AP/Ap_StrCmd_MOVE.c **** 	u16  argc;
  61:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  62:../LIB_AP/Ap_StrCmd_MOVE.c **** 	//sscanf((char *)arg, "%s %s %d %d", CmdMain, CmdSub, &LeftSpeed, &RightSpeed);
  63:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  64:../LIB_AP/Ap_StrCmd_MOVE.c **** 	argc = Lb_Util_PaseArgs( (char *)arg, argv );
  42              		.loc 1 64 0
  43 0006 0846     		mov	r0, r1
  44              	.LVL1:
  45 0008 114B     		ldr	r3, .L6
  46 000a 6946     		mov	r1, sp
  47              	.LVL2:
  48 000c 9847     		blx	r3
  49              	.LVL3:
  65:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  66:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  67:../LIB_AP/Ap_StrCmd_MOVE.c **** 	if( strcmp( argv[1], "PWM" ) == 0 )
  50              		.loc 1 67 0
  51 000e 0198     		ldr	r0, [sp, #4]
  52 0010 1049     		ldr	r1, .L6+4
  53 0012 114B     		ldr	r3, .L6+8
  54 0014 9847     		blx	r3
  55              	.LVL4:
  56 0016 0446     		mov	r4, r0
  57 0018 30B1     		cbz	r0, .L5
  58 001a 104D     		ldr	r5, .L6+12
  68:../LIB_AP/Ap_StrCmd_MOVE.c **** 	{
  69:../LIB_AP/Ap_StrCmd_MOVE.c **** 		
  70:../LIB_AP/Ap_StrCmd_MOVE.c **** 		LeftSpeed  = Lb_Util_atoi(argv[2]);
  71:../LIB_AP/Ap_StrCmd_MOVE.c **** 		RightSpeed = Lb_Util_atoi(argv[3]); 
  72:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  73:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  74:../LIB_AP/Ap_StrCmd_MOVE.c **** 		Hw_DcMotor_Handle( LeftSpeed, RightSpeed );
  75:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  76:../LIB_AP/Ap_StrCmd_MOVE.c **** 		Ap_StrCmd_SendResp( ErrCode, "%d %d\n", LeftSpeed, RightSpeed );
  77:../LIB_AP/Ap_StrCmd_MOVE.c **** 	}
  78:../LIB_AP/Ap_StrCmd_MOVE.c **** 	else
  79:../LIB_AP/Ap_StrCmd_MOVE.c **** 	{
  80:../LIB_AP/Ap_StrCmd_MOVE.c **** 		ErrCode = 0xFF;
  59              		.loc 1 80 0
  60 001c FF20     		movs	r0, #255
  61              	.L2:
  62              	.LVL5:
  81:../LIB_AP/Ap_StrCmd_MOVE.c **** 	}
  82:../LIB_AP/Ap_StrCmd_MOVE.c **** 
  83:../LIB_AP/Ap_StrCmd_MOVE.c **** 	Ap_StrCmd_SendResp( ErrCode, "\n" );
  63              		.loc 1 83 0
  64 001e 1049     		ldr	r1, .L6+16
  65 0020 A847     		blx	r5
  66              	.LVL6:
  84:../LIB_AP/Ap_StrCmd_MOVE.c **** }
  67              		.loc 1 84 0
  68 0022 0DF5007D 		add	sp, sp, #512
  69 0026 70BD     		pop	{r4, r5, r6, pc}
  70              	.LVL7:
  71              	.L5:
  70:../LIB_AP/Ap_StrCmd_MOVE.c **** 		LeftSpeed  = Lb_Util_atoi(argv[2]);
  72              		.loc 1 70 0
  73 0028 0E4E     		ldr	r6, .L6+20
  74 002a 0298     		ldr	r0, [sp, #8]
  75 002c B047     		blx	r6
  76              	.LVL8:
  77 002e 0546     		mov	r5, r0
  78              	.LVL9:
  71:../LIB_AP/Ap_StrCmd_MOVE.c **** 		RightSpeed = Lb_Util_atoi(argv[3]); 
  79              		.loc 1 71 0
  80 0030 0398     		ldr	r0, [sp, #12]
  81              	.LVL10:
  82 0032 B047     		blx	r6
  83              	.LVL11:
  74:../LIB_AP/Ap_StrCmd_MOVE.c **** 		Hw_DcMotor_Handle( LeftSpeed, RightSpeed );
  84              		.loc 1 74 0
  85 0034 0C4B     		ldr	r3, .L6+24
  86 0036 01B2     		sxth	r1, r0
  71:../LIB_AP/Ap_StrCmd_MOVE.c **** 		RightSpeed = Lb_Util_atoi(argv[3]); 
  87              		.loc 1 71 0
  88 0038 0646     		mov	r6, r0
  89              	.LVL12:
  74:../LIB_AP/Ap_StrCmd_MOVE.c **** 		Hw_DcMotor_Handle( LeftSpeed, RightSpeed );
  90              		.loc 1 74 0
  91 003a 28B2     		sxth	r0, r5
  92              	.LVL13:
  93 003c 9847     		blx	r3
  94              	.LVL14:
  76:../LIB_AP/Ap_StrCmd_MOVE.c **** 		Ap_StrCmd_SendResp( ErrCode, "%d %d\n", LeftSpeed, RightSpeed );
  95              		.loc 1 76 0
  96 003e 2046     		mov	r0, r4
  97 0040 2A46     		mov	r2, r5
  98 0042 0A49     		ldr	r1, .L6+28
  99 0044 3346     		mov	r3, r6
 100 0046 054D     		ldr	r5, .L6+12
 101              	.LVL15:
 102 0048 A847     		blx	r5
 103              	.LVL16:
  57:../LIB_AP/Ap_StrCmd_MOVE.c **** 	u8	 ErrCode = ERR_NONE;
 104              		.loc 1 57 0
 105 004a 2046     		mov	r0, r4
 106 004c E7E7     		b	.L2
 107              	.L7:
 108 004e 00BF     		.align	2
 109              	.L6:
 110 0050 00000000 		.word	Lb_Util_PaseArgs
 111 0054 00000000 		.word	.LC0
 112 0058 00000000 		.word	strcmp
 113 005c 00000000 		.word	Ap_StrCmd_SendResp
 114 0060 0C000000 		.word	.LC2
 115 0064 00000000 		.word	Lb_Util_atoi
 116 0068 00000000 		.word	Hw_DcMotor_Handle
 117 006c 04000000 		.word	.LC1
 118              		.cfi_endproc
 119              	.LFE0:
 121              		.section	.rodata.str1.4,"aMS",%progbits,1
 122              		.align	2
 123              	.LC0:
 124 0000 50574D00 		.ascii	"PWM\000"
 125              	.LC1:
 126 0004 25642025 		.ascii	"%d %d\012\000"
 126      640A00
 127 000b 00       		.space	1
 128              	.LC2:
 129 000c 0A00     		.ascii	"\012\000"
 130 000e 0000     		.text
 131              	.Letext0:
 132              		.file 2 "../LIB_HW/Hw_Define.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 Ap_StrCmd_MOVE.c
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccwW6TGW.s:19     .text.Ap_StrCmd_MOVE:0000000000000000 $t
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccwW6TGW.s:24     .text.Ap_StrCmd_MOVE:0000000000000000 Ap_StrCmd_MOVE
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccwW6TGW.s:110    .text.Ap_StrCmd_MOVE:0000000000000050 $d
/var/folders/bz/nn5481rn5xq59rb0mbj7x0880000gn/T//ccwW6TGW.s:122    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
Lb_Util_PaseArgs
strcmp
Ap_StrCmd_SendResp
Lb_Util_atoi
Hw_DcMotor_Handle
